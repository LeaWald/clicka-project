openapi: 3.0.0
info:
  title: Clicka API
  version: 1.0.0

paths:
  /api/auth/google:
    post:
      tags: 
        - Auth
      summary: Login with Google authorization code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
      responses:
        '200':
          description: Login successful
        '400':
          description: Missing or invalid authorization code
        '403':
          description: User is not authorized to log in

  /api/auth/refresh:
    post:
      tags: 
        - Auth
      summary: Refresh token using sessionId from cookie
      responses:
        '200':
          description: New token generated
        '401':
          description: Missing or expired session
        '500':
          description: Internal server error

  /api/auth/logout:
    post:
      tags: 
        - Auth
      summary: Log out from the system
      responses:
        '200':
          description: Logout successful

  /api/auth/verify:
    get:
      tags: 
        - Auth
      summary: Verify if user is logged in based on session cookie
      responses:
        '200':
          description: User and sessionId returned
        '401':
          description: Not authenticated

  /api/users/getAllUsers:
    get:
      tags:
        - Users
      summary: Get all users (Admin/Manager only)
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Internal server error

  /api/users/createUser:
    post:
      tags:
        - Users
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '500':
          description: Failed to create user

  /api/users/{id}:
    get:
      tags:
        - Users
      summary: Get user by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: User ID
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '500':
          description: Internal server error

    put:
      tags:
        - Users
      summary: Update user by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
        '404':
          description: User not found
        '500':
          description: Internal server error

    delete:
      tags:
        - Users
      summary: Delete user by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: User ID
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found
        '500':
          description: Internal server error

  /api/users/loginByGoogleId/{googleId}:
    get:
      tags:
        - Users
      summary: Login user by Google ID
      parameters:
        - in: path
          name: googleId
          schema:
            type: string
          required: true
          description: Google ID of the user
      responses:
        '200':
          description: User found and logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
          enum: [ADMIN, MANAGER, USER]
        googleId:
          type: string
        lastLogin:
          type: string
          format: date-time
        active:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: role

security:
  - cookieAuth: []